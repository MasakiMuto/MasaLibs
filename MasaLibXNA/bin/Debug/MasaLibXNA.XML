<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MasaLibXNA</name>
    </assembly>
    <members>
        <member name="T:Masa.Lib.XNA.Collision.CollisionChainCircle">
            <summary>
            同一半径の円が複数連なった物。うねうねする触手などに。
            </summary>
        </member>
        <member name="T:Masa.Lib.XNA.Collision.CollisionCircle">
            <summary>
            ただの円
            </summary>
        </member>
        <member name="T:Masa.Lib.XNA.Collision.CollisionLine">
            <summary>
            始点終点からなる太さを持たない線分
            </summary>
        </member>
        <member name="T:Masa.Lib.XNA.Collision.CollisionPoint">
            <summary>
            大きさを持たない点
            </summary>
        </member>
        <member name="T:Masa.Lib.XNA.Collision.CollisionPolygon">
            <summary>
            頂点列と回転・平行移動ができる多角形
            </summary>
        </member>
        <member name="T:Masa.Lib.XNA.Collision.CollisionRect">
            <summary>
            回転なしのxy軸に沿った長方形
            </summary>
        </member>
        <member name="T:Masa.Lib.XNA.AnimeFrame">
            <summary>
            テクスチャアニメーションの1コマ。GameTextureのインデックスと、そのコマが持続するフレーム数を持つ
            </summary>
        </member>
        <member name="M:Masa.Lib.XNA.AnimeFrame.#ctor(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="index">コマ番号</param>
            <param name="count">持続するフレーム数</param>
        </member>
        <member name="T:Masa.Lib.XNA.GameTexture">
            <summary>
            アニメーション情報を保有するテクスチャ
            </summary>
        </member>
        <member name="T:Masa.Lib.XNA.DividedTexture">
            <summary>
            コマ分割対応の汎用テクスチャ
            </summary>
        </member>
        <member name="F:Masa.Lib.XNA.DividedTexture.Width">
            <summary>
            コマ当たりの幅 高さ
            </summary>
        </member>
        <member name="F:Masa.Lib.XNA.DividedTexture.Height">
            <summary>
            コマ当たりの幅 高さ
            </summary>
        </member>
        <member name="F:Masa.Lib.XNA.DividedTexture.HalfVector">
            <summary>
            中心指定描画に使う、{Width/2, Height/2}のベクトル
            </summary>
        </member>
        <member name="M:Masa.Lib.XNA.DividedTexture.#ctor(Microsoft.Xna.Framework.Graphics.Texture2D,System.Int32,System.Int32)">
            <summary>
            分割数を指定して生成する。左上1段目から右上1段目、左2段目から右2段目、の順に 0, 1, ...と番号がふられる
            </summary>
            <param name="tex"></param>
            <param name="divx">横方向のコマ分割数</param>
            <param name="divy">縦方向のコマ分割数</param>
        </member>
        <member name="M:Masa.Lib.XNA.DividedTexture.Center(System.Int32)">
            <summary>
            テクスチャの回転中心
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Masa.Lib.XNA.DividedTexture.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,System.Int32)">
            <summary>
            左上座標と番号を指定してスプライト描画
            </summary>
            <param name="pos"></param>
            <param name="index"></param>
        </member>
        <member name="M:Masa.Lib.XNA.DividedTexture.DrawCenter(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,System.Int32)">
            <summary>
            中心座標と番号を指定してスプライト描画
            </summary>
            <param name="center"></param>
            <param name="index"></param>
        </member>
        <member name="M:Masa.Lib.XNA.GameTexture.#ctor(Microsoft.Xna.Framework.Graphics.Texture2D,System.Int32,System.Int32)">
            <summary>
            アニメーション無効
            </summary>
            <param name="tex"></param>
            <param name="divx"></param>
            <param name="divy"></param>
        </member>
        <member name="M:Masa.Lib.XNA.GameTexture.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,System.Int32,Microsoft.Xna.Framework.Color,System.Single,System.Single)">
            <summary>
            ゲームキャラクタ用スプライト描画メソッド
            </summary>
            <param name="center">中心座標</param>
            <param name="index">インデックス</param>
            <param name="angle">回転角。デフォルトだと無回転</param>
            <param name="rate">拡大率。デフォルトだと無拡大</param>
        </member>
        <member name="M:Masa.Lib.XNA.GameTexture.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,System.Int32,System.Single,System.Single)">
            <summary>
            ゲームキャラクタ用スプライト描画メソッド
            </summary>
            <param name="center">中心座標</param>
            <param name="index">インデックス</param>
            <param name="angle">回転角。デフォルトだと無回転</param>
            <param name="rate">拡大率。デフォルトだと無拡大</param>
        </member>
        <member name="T:Masa.Lib.XNA.AnimeTexture">
            <summary>
            実際にアニメーションを行い、テクスチャを保持する
            キャラ一つ一つが別々に保有するもの。
            </summary>
        </member>
        <member name="F:Masa.Lib.XNA.AnimeTexture.AnimeIndex">
            <summary>
            現在のフレーム番号
            </summary>
        </member>
        <member name="F:Masa.Lib.XNA.AnimeTexture.CharaIndex">
            <summary>
            デフォルトは-1。正数に設定するとそのインデックスを使って描画
            </summary>
        </member>
        <member name="M:Masa.Lib.XNA.AnimeTexture.Update">
            <summary>
            AnimeFrameに従ってアニメーションを実行する
            </summary>
        </member>
        <member name="M:Masa.Lib.XNA.AnimeTexture.Next">
            <summary>
            Updateとは関係なく強制的に次のフレームへ遷移させる。アニメーション無効なら何もしない
            実行すると現在のフレームの再生時間はリセットされる
            </summary>
        </member>
        <member name="P:Masa.Lib.XNA.AnimeTexture.SourceRect">
            <summary>
            テクスチャ取得元の座標Rect
            </summary>
        </member>
        <member name="M:Masa.Lib.XNA.GraphicUtil.DrawStringCenter(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Graphics.SpriteFont,System.String,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Single)">
            <summary>
            xy中央揃え
            </summary>
        </member>
        <member name="M:Masa.Lib.XNA.GraphicUtil.Add(Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color)">
            <summary>
            色の加算。Max超えたらMaxが入る。Alphaもそのまま足す
            </summary>
            <param name="c1"></param>
            <param name="c2"></param>
            <returns></returns>
        </member>
        <member name="M:Masa.Lib.XNA.GraphicUtil.CreateColor(System.Single)">
            <summary>
            rgb = value, a = 1のColorを作成
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:Masa.Lib.XNA.HSVColor.H">
            <summary>
            色相 0..360
            </summary>
        </member>
        <member name="P:Masa.Lib.XNA.HSVColor.S">
            <summary>
            彩度 0..1
            </summary>
        </member>
        <member name="P:Masa.Lib.XNA.HSVColor.V">
            <summary>
            輝度 0..1
            </summary>
        </member>
        <member name="P:Masa.Lib.XNA.HSVColor.A">
            <summary>
            アルファ 0..1
            </summary>
        </member>
        <member name="M:Masa.Lib.XNA.Input.KeyboardConfig.FromXElement(System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="inputElement">keyboard_configタグの要素</param>
            <returns></returns>
        </member>
        <member name="M:Masa.Lib.XNA.Input.PadConfig.IntToButton(System.Int32)">
            <summary>
            対応するボタンがなければしいたけボタンを返す
            </summary>
            <param name="button"></param>
            <returns></returns>
        </member>
        <member name="M:Masa.Lib.XNA.Input.PadConfig.FromXElement(System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="inputElement">pad_configタグの要素</param>
            <returns></returns>
        </member>
        <member name="P:Masa.Lib.XNA.Input.PadConfig.IntButtonArray">
            <summary>
            get only
            </summary>
        </member>
        <member name="T:Masa.Lib.XNA.Input.GamePadDevice">
            <summary>
            デバイスに直接対応するもの。DirectInputを使う。
            </summary>
        </member>
        <member name="M:Masa.Lib.XNA.Input.GamePadDevice.GetPadNumber">
            <summary>
            接続されているパッドの数を取得する
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masa.Lib.XNA.Input.GamePadDevice.ZipPadsStates(Masa.Lib.XNA.Input.GamePadDevice[])">
            <summary>
            複数のゲームパッドのボタン入力の和を取る
            </summary>
            <param name="pads"></param>
            <returns>各ボタンが押されている/いないの配列。状態をとれるパッドが存在しない場合はnull</returns>
        </member>
        <member name="M:Masa.Lib.XNA.Input.GamePadDevice.#ctor(System.IntPtr,System.Int32)">
            <summary>
            番号指定でデバイス生成。番号のデバイスが存在しなければ例外を投げる。
            </summary>
            <param name="window"></param>
            <param name="padNumber">0始まり</param>
        </member>
        <member name="M:Masa.Lib.XNA.Input.GamePadDevice.#ctor(System.IntPtr)">
            <summary>
            ゲームパッドのデバイスを生成。1番目のパッドを使用。
            </summary>
            <param name="window"></param>
        </member>
        <member name="T:Masa.Lib.XNA.Input.GamePad">
            <summary>
            DirectInputデバイスをラップしたもの
            </summary>
        </member>
        <member name="T:Masa.Lib.XNA.Input.ControlState">
            <summary>
            コントローラー・キーボードからの入力情報集合体
            </summary>
        </member>
        <member name="M:Masa.Lib.XNA.Input.ControlState.DirectionVector">
            <summary>
            正規化された入力ベクトル(入力がなければゼロベクトル)
            </summary>
            <returns></returns>
        </member>
        <member name="P:Masa.Lib.XNA.Input.ControlState.Buttons">
            <summary>
            ボタンを列挙(ABXY START ESC DEBUG)
            </summary>
        </member>
        <member name="P:Masa.Lib.XNA.Input.ControlState.Directions">
            <summary>
            方向を列挙(↑↓←→)
            </summary>
        </member>
        <member name="P:Masa.Lib.XNA.Input.ControlState.Inputs">
            <summary>
            全入力を列挙
            </summary>
        </member>
        <member name="T:Masa.Lib.XNA.Input.Button">
            <summary>
            コントローラー・キーボードからの入力キーひとつの状態
            </summary>
        </member>
        <member name="M:Masa.Lib.XNA.Input.Button.Input(System.Boolean)">
            <summary>
            押されているか否かのデータを入力して、情報を更新する
            </summary>
            <param name="p"></param>
        </member>
        <member name="F:Masa.Lib.XNA.Input.ActiveDevice.Mouse">
            キーボードからのコントローラー入力
        </member>
        <member name="M:Masa.Lib.XNA.Input.InputManager.Update">
            <summary>
            入力を取得してInputValueとControlStateを設定する
            GamePlayControlStateはUpdateGamePlay系を呼ばないと更新されないので注意
            </summary>
        </member>
        <member name="M:Masa.Lib.XNA.Input.InputManager.ClampMousePosition(System.Int32,System.Int32)">
            <summary>
            マウス位置を指定された座標内に収める
            </summary>
            <param name="right"></param>
            <param name="bottom"></param>
        </member>
        <member name="M:Masa.Lib.XNA.Input.InputManager.SetMousePosition(System.Int32,System.Int32)">
            <summary>
            マウス位置を強制的に設定する
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Masa.Lib.XNA.Input.InputManager.UpdateGamePlayFromValue(System.Int16)">
            <summary>
            SHORT値からゲームキー入力を再現する(リプレイ再生)
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Masa.Lib.XNA.Input.InputManager.UpdateGamePlayFromControl">
            <summary>
            入力装置からゲームキー入力を設定する(通常プレイ、リプレイ記録)
            </summary>
        </member>
        <member name="M:Masa.Lib.XNA.Input.InputManager.UpdateControlState">
            <summary>
            システム用入力の設定。通常はUpdateと同時に呼ばれるので明示的に呼ぶ必要なし
            </summary>
        </member>
        <member name="M:Masa.Lib.XNA.Input.InputManager.GetPushedButton">
            <summary>
            全てのボタンから押されたボタンを取得する
            </summary>
            <returns>-1なら何も押されていない、それ以外ならPadConfig.IntToButtonに入れられる値</returns>
        </member>
        <member name="M:Masa.Lib.XNA.Input.InputManager.GetPushedKey">
            <summary>
            全てのキーから押されたキーを取得する
            </summary>
            <returns>-1なら何も押されてない、それ以外ならMicrosoft.Xna.Framework.Input.Keysにキャスト可能</returns>
        </member>
        <member name="P:Masa.Lib.XNA.Input.InputManager.ControlState">
            <summary>
            標準の入力
            </summary>
        </member>
        <member name="P:Masa.Lib.XNA.Input.InputManager.GamePlayControlState">
            <summary>
            ゲームプレイ用にシステムキーなどを無視できるようにした入力。リプレイ再生時はこちらを書き換える
            </summary>
        </member>
        <member name="P:Masa.Lib.XNA.Input.InputManager.InputValue">
            <summary>
            リプレイ用の入力値
            </summary>
        </member>
        <member name="T:Masa.Lib.XNA.ItemSelecter`2">
            <summary>
            
            </summary>
        </member>
        <member name="T:Masa.Lib.XNA.LinearSelecter">
            <summary>
            上下リスト・左右リストの選択
            </summary>
        </member>
        <member name="F:Masa.Lib.XNA.SelecterBase.ReloadFreq">
            <summary>
            押しっぱなし認識周期 負だと押しっぱなしをスルー
            </summary>
        </member>
        <member name="F:Masa.Lib.XNA.SelecterBase.BeginReloadCount">
            <summary>
            カウンタがこれを超えたら動いてループ開始、その後はReloadFreqのたびに動く
            </summary>
        </member>
        <member name="M:Masa.Lib.XNA.SelecterBase.Update">
            <summary>
            項目が動いたらtrue,そうでなければfalseを返す
            </summary>
            <returns></returns>
        </member>
        <member name="P:Masa.Lib.XNA.SelecterBase.OptionCount">
            <summary>
            選択肢の数
            </summary>
        </member>
        <member name="M:Masa.Lib.XNA.LinearSelecter.#ctor(Masa.Lib.XNA.Input.ControlState,System.Int32,System.Int32,Masa.Lib.XNA.SelectDirection)">
            <summary>
            
            </summary>
            <param name="input">使用する入力State 普通はキー入力そのままの</param>
            <param name="max">要素数</param>
            <param name="freq">押しっぱなし自動移動の速度</param>
            <param name="dir">縦か横か</param>
        </member>
        <member name="M:Masa.Lib.XNA.LinearSelecter.Update">
            <summary>
            項目が動いたらtrue,そうでなければfalseを返す
            </summary>
            <returns></returns>
        </member>
        <!-- 正しくない形式の XML コメントがメンバー "F:Masa.Lib.XNA.Collision.LiteCollision.Radius" で無視されました -->
        <member name="F:Masa.Lib.XNA.Collision.LiteCollision.Width">
            <summary>
            for Rect
            </summary>
        </member>
        <member name="F:Masa.Lib.XNA.Collision.LiteCollision.Height">
            <summary>
            for Rect
            </summary>
        </member>
        <member name="M:Masa.Lib.XNA.Collision.LiteCollision.SetAsCicle(System.Single)">
            <summary>
            円判定として初期化
            </summary>
            <param name="r"></param>
        </member>
        <member name="M:Masa.Lib.XNA.Collision.LiteCollision.SetAsRect(System.Single,System.Single)">
            <summary>
            無回転矩形として初期化
            </summary>
            <param name="w"></param>
            <param name="h"></param>
        </member>
        <member name="M:Masa.Lib.XNA.Collision.LiteCollision.SetChainCirclePosition(Microsoft.Xna.Framework.Vector2[])">
            <summary>
            ChainCircle専用
            </summary>
            <param name="pos"></param>
        </member>
        <member name="M:Masa.Lib.XNA.MathUtilXNA.CreatePerspective(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            z=0でxy=0にならないProjection行列を作成する
            </summary>
            <param name="nearWidth">NearPlaneの幅</param>
            <param name="farWidth">FarPlaneの幅</param>
            <param name="aspectRatio">x/yの値</param>
            <param name="nearPlane">nearPlaneのz</param>
            <param name="farPlane">farPlaneのz</param>
            <returns></returns>
        </member>
        <member name="M:Masa.Lib.XNA.MathUtilXNA.LimitedAim(System.Single,System.Int32)">
            <summary>
            戦車風固定角度自機狙い
            </summary>
            <param name="target"></param>
            <param name="divitation"></param>
            <returns></returns>
        </member>
        <member name="M:Masa.Lib.XNA.MathUtilXNA.ToPolar(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            origin原点の極座標を(Angle, Distance)で返す
        </member>
        <member name="M:Masa.Lib.XNA.MathUtilXNA.ToRect(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            origin原点の極座標(Angle, Distance)を直交座標に変換
        </member>
        <member name="M:Masa.Lib.XNA.MathUtilXNA.ElementMul(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            要素ごとの積
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:Masa.Lib.XNA.MathUtilXNA.Inverse(Microsoft.Xna.Framework.Vector2)">
            <summary>
            各要素の逆数
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:Masa.Lib.XNA.MathUtilXNA.GetRandomVector(System.Single,System.Random)">
            特定の長さのランダムな向きの三次元ベクトル
        </member>
        <member name="M:Masa.Lib.XNA.MathUtilXNA.GetLeftRight(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            基準ベクトルの左側に対象ベクトルがあれば+1、右側なら-1
            </summary>
            <param name="baseVector"></param>
            <param name="targetVector"></param>
            <returns></returns>
        </member>
        <member name="M:Masa.Lib.XNA.MathUtilXNA.IsOverRect(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            範囲外から完全に出たかを判定する
            </summary>
            <param name="position">主体の中心</param>
            <param name="frame">判定の範囲(最小は0)</param>
            <param name="margin">「完全に」というための余裕</param>
            <returns></returns>
        </member>
        <member name="M:Masa.Lib.XNA.MathUtilXNA.GetMinimamPolygon(Microsoft.Xna.Framework.Vector2[])">
            <summary>
            平面上の点の群れから、それら全てを内包する最小の多角形を求める
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="T:Masa.Lib.XNA.PlaneSelecter">
            <summary>
            平面リスト(ネームエントリなど)の選択
            </summary>
        </member>
        <member name="M:Masa.Lib.XNA.PlaneSelecter.#ctor(Masa.Lib.XNA.Input.ControlState,System.Int32,System.Int32,System.Int32,Masa.Lib.XNA.SelectDirection)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <param name="max">全要素数</param>
            <param name="freq"></param>
            <param name="length">一行(列)の長さ</param>
            <param name="dir">行方向だと+1か、列方向だとか</param>
        </member>
        <member name="M:Masa.Lib.XNA.TextureColorConverter.Convert(System.Single)">
            <summary>
            色を加算する
            </summary>
            <param name="h">色相の加算値</param>
            <returns></returns>
        </member>
        <member name="T:Masa.Lib.XNA.WritableVertexBuffer`1">
            <summary>
            動作が怪しい
            </summary>
            <typeparam name="T"></typeparam>
        </member>
    </members>
</doc>
